name: project_poppin
description: "popstore introduce"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+3

environment:
  sdk: '>=3.3.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  get: ^4.6.6
  flutter_native_splash: ^2.0.5
  firebase_core: ^2.29.0
  cloud_firestore: ^4.16.0
  shared_preferences: ^2.2.0
  url_launcher: ^6.2.5
  flutter_naver_map: ^1.2.2+flutter3.22
  permission_handler: ^11.3.1
  geolocator: ^11.0.0
  flutter_dotenv: ^5.1.0
  flutter_share: ^2.0.0
  firebase_remote_config: ^4.4.2
  package_info_plus: ^8.0.0
  shimmer: ^3.0.0
  http: ^1.2.1
  cached_network_image: ^3.3.1
  firebase_messaging: ^14.8.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/map/
    - assets/icons/marker/
    - assets/icons/nav/
    - assets/button/
    - .env

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: noto
      fonts:
        - asset: assets/fonts/noto_san_thin.ttf
          weight: 100
        - asset: assets/fonts/noto_san_extralight.ttf
          weight: 200
        - asset: assets/fonts/noto_san_light.ttf
          weight: 300
        - asset: assets/fonts/noto_san_regular.ttf
          weight: 400
        - asset: assets/fonts/noto_san_medium.ttf
          weight: 500
        - asset: assets/fonts/noto_san_semibold.ttf
          weight: 600
        - asset: assets/fonts/noto_san_bold.ttf
          weight: 700
        - asset: assets/fonts/noto_san_extrabold.ttf
          weight: 800
        - asset: assets/fonts/noto_san_black.ttf
          weight: 900

flutter_native_splash:
  color: "#FFFFFF"
  image: assets/images/poppin_logo_size.png
  # 이 패키지는 Flutter의 기본 흰색 기본 스플래시 화면을 사용자 정의하는 기본 코드를 생성합니다.
  # 배경색과 스플래시 이미지.
  ## 생성 / 복원 명령어
  # flutter pub run flutter_native_splash:create
  # Flutter의 기본 흰색 시작 화면을 복원하려면 터미널에서 다음 명령을 실행합니다.
  # flutter pub run flutter_native_splash:remove

  ##  필수 매개변수 color / background_image
  # 둘 중 하나만 사용할 수 있으며 색상과 background_image를 둘 다 설정할 수 없습니다.

  ## 이후 내용은 선택적 매개변수들 입니다.

  # image 키워드로 스플래시 화면에 사용되는 이미지를 지정할 수 있습니다.
  # png 파일이며 4x 픽셀 밀도에 맞게 크기가 조정되어야 합니다.
  #image: assets/splash.png

  # branding 속성을 사용하면 시작 화면에서 아래에 나오는 브랜딩으로 사용할 이미지를 지정할 수 있습니다.
  # png 파일이어야 합니다. Android, iOS 및 웹에서 지원됩니다. 안드로이드 12의 경우, Android 12 섹션을 참조하세요.
  #branding: assets/dart.png
  # 브랜딩 이미지를 화면 하단에 배치하려면 bottom, bottomRight, 기본값은 bottom입니다.
  #branding_mode: bottom

  # color_dark, background_image_dark, image_dark, branding_dark는 다크모드 설정 변수입니다.
  # A Set.
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png
  #branding_dark: assets/dart_dark.png

  # Android 12는 이전 버전과 다르게 시작 화면을 처리합니다. 방문하시기 바랍니다
  # https://developer.android.com/guide/topics/ui/splash-screen
  # 다음은 Android 12 특정 매개변수입니다.

  android_12:
    color: "#FFFFFF"
    image: assets/images/poppin_logo_size(960).png
  # 이미지 매개변수는 스플래시 화면 아이콘 이미지를 설정합니다. 이 매개변수를 지정하지 않으면
  # 앱의 런처 아이콘이 대신 사용됩니다.
  # 스플래쉬 화면은 화면 중앙의 원에 잘려서 나오니 참고하세요.
  # 아이콘 배경이 있는 앱 아이콘: 960×960 픽셀이어야 하며 원 안에 맞아야 합니다.
  # 직경 640픽셀.
  # 아이콘 배경이 없는 앱 아이콘: 1152×1152 픽셀이어야 하며 원 안에 맞아야 합니다.
  # 직경 768픽셀.
  #이미지: assets/android12splash.png

  # 스플래시 화면 배경색.
  #color: "#42a5f5"

  # 앱 아이콘 배경색.
  #icon_background_color: "#111111"

  # branding 속성을 사용하면 시작 화면에서 브랜딩으로 사용할 이미지를 지정할 수 있습니다.
  #branding: assets/dart.png

  # image_dark, color_dark, icon_background_color_dark, branding_dark 설정 값은 다크모들에 대해서 설정합니다
  #image_dark: assets/android12splash-invert.png
  #color_dark: "#042a49"
  #icon_background_color_dark: "#AAAAAA"

  ## 플랫폼.
  # android, ios 및 web 매개변수를 사용하여 주어진 스플래시 화면 생성을 비활성화할 수 있습니다.
  #android: false
  #ios: false
  #web: false

  # 플랫폼별로 각각 지정할 수도 있습니다.
  # 각 매개변수. 다음 매개변수를 모두 지정하거나 선택하거나 지정하지 않을 수 있습니다.
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  #image_android: 자산/splash-android.png
  #image_dark_android: 자산/splash-invert-android.png
  #image_ios: 자산/splash-ios.png
  #image_dark_ios: 자산/splash-invert-ios.png
  #image_web: 자산/splash-web.png
  #image_dark_web: 자산/splash-invert-web.png
  #background_image_android: "자산/배경-android.png"
  #background_image_dark_android: "자산/dark-background-android.png"
  #background_image_ios: "자산/배경-ios.png"
  #background_image_dark_ios: "자산/dark-background-ios.png"
  #background_image_web: "자산/배경-web.png"
  #background_image_dark_web: "assets/dark-background-web.png"
  #branding_android: assets/brand-android.png
  #branding_dark_android: assets/dart_dark-android.png
  #branding_ios: assets/brand-ios.png
  #branding_dark_ios: assets/dart_dark-ios.png